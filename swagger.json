{
  "openapi": "3.0.3",
  "info": {
    "title": "HelpDesk API",
    "description": "Essa API foi desenvolvida para um sistema completo de criação de chamados e atendimentos HELPDESK.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3333",
      "description": "Servidor de Desenvolvimento Local"
    }
  ],
  "paths": {
    "/": {
      "post": {
        "description": "Dados necessários para a realização do login.",
        "summary": "Login",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Dados do usuário e Token JWT",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response Login"
                }
              }
            }
          },
          "400": {
            "description": "Dados inválidos"
          },
          "401": {
            "description": "Credenciais incorretas"
          },
          "404": {
            "description": "Usuário não registrado"
          }
        }
      }
    },
    "/user/list/{role}": {
      "get": {
        "description": "Lista todos os usuários de uma função específica (cliente e técnico) com paginação. Somente administradores podem listar os usuarios.",
        "summary": "Listar usuários por função",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "role",
            "in": "path",
            "description": "O tipo de função dos usuários a serem listados.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "customer",
                "technical"
              ],
              "example": "customer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Número da página para a listagem.",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "example": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Número de itens por página.",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "example": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de usuários retornada com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/List Users Response"
                }
              }
            }
          },
          "400": {
            "description": "Parâmetros de query inválidos (page ou limit) ou roleType inválido."
          },
          "401": {
            "description": "Não autenticado."
          },
          "403": {
            "description": "Acesso negado."
          },
          "404": {
            "description": "Perfil inválido fornecido."
          }
        }
      }
    },
    "/user/customer": {
      "post": {
        "description": "Dados necessários para cadastro de um novo Cliente no sistema.",
        "summary": "Criar cliente",
        "tags": [
          "Users"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Create User Customer"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Criado com sucesso"
          },
          "400": {
            "description": "Dados inválidos"
          },
          "409": {
            "description": "Usuário já existe"
          }
        }
      }
    },
    "/user/technical": {
      "post": {
        "description": "Dados necessários para cadastro de um novo Técnico no sistema, somente admin pode realizar o cadastro.",
        "summary": "Criar técnico (admin)",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Create User Technical"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Criado com sucesso"
          },
          "400": {
            "description": "Dados inválidos"
          },
          "403": {
            "description": "Acesso negado"
          },
          "409": {
            "description": "Usuário já existe"
          }
        }
      }
    },
    "/user/{id}": {
      "get": {
        "description": "Retorna os dados de um usuário específico pelo ID. Protegido por autenticação JWT.",
        "summary": "Buscar usuário por ID",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do usuário a ser buscado.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "ff9e1bf3-eaf7-4f71-b5a0-d0d806a553a3"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Dados do usuário retornados com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User by Id Response"
                }
              }
            }
          },
          "400": {
            "description": "ID do usuário inválido. (Ex: ID não corresponde ao formato UUID)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Id invalido."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autenticado."
          },
          "403": {
            "description": "Acesso negado. (Ex: Usuário não tem permissão para acessar este usuário ou não é um administrador)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Acesso negado. Você não tem permissão para acessar este usuário."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Usuário não encontrado."
          }
        }
      },
      "patch": {
        "description": "Atualiza os dados de um usuário existente, incluindo a possibilidade de enviar um novo avatar. Protegido por autenticação JWT.",
        "summary": "Atualizar usuário",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do usuário a ser atualizado.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "ff9e1bf3-eaf7-4f71-b5a0-d0d806a553a3"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Update User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Dados atualizados com sucesso."
          },
          "400": {
            "description": "Dados inválidos. (Ex: ID não corresponde ao formato UUID)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Id invalido."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não há dados para atualizar / Não autenticado."
          },
          "403": {
            "description": "Acesso negado. (Ex: Usuário não tem permissão para atualizar este usuário ou não é um administrador)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Acesso negado. Você não tem permissão para atualizar este usuário."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Usuário não encontrado."
          }
        }
      },
      "delete": {
        "description": "Remove um usuário do sistema. Somente administradores ou o próprio cliente/técnico podem remover o usuário.",
        "summary": "Remover usuário (admin/proprietário)",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do usuário a ser removido.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "ff9e1bf3-eaf7-4f71-b5a0-d0d806a553a3"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Usuário excluído com sucesso."
          },
          "401": {
            "description": "Informe o ID do usuário / Não autenticado."
          },
          "403": {
            "description": "Acesso negado. (Ex: Usuário não tem permissão para remover este usuário ou não é um administrador)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Acesso negado. Você não tem permissão para remover este usuário."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Usuário não encontrado."
          }
        }
      }
    },
    "/user/avatar/{filename}": {
      "get": {
        "summary": "Servir avatar do usuário",
        "description": "Retorna a imagem de avatar do usuário a partir do nome do arquivo. A rota serve arquivos estáticos da pasta de upload.",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "filename",
            "in": "path",
            "description": "Nome do arquivo de imagem (por exemplo, 'default.svg').",
            "required": true,
            "schema": {
              "type": "string",
              "example": "default.svg"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Arquivo de imagem retornado com sucesso.",
            "content": {
              "image/png": {},
              "image/jpeg": {},
              "image/svg+xml": {}
            }
          },
          "404": {
            "description": "Arquivo não encontrado."
          }
        }
      }
    },
    "/user/avatar/{id}": {
      "delete": {
        "description": "Remove o avatar de um usuário, resetando-o para o avatar padrão 'default.svg'. Protegido por autenticação JWT.",
        "summary": "Remover avatar do usuário",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do usuário cujo avatar será removido.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "ff9e1bf3-eaf7-4f71-b5a0-d0d806a553a3"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Avatar removido com sucesso. O avatar do usuário foi resetado para 'default.svg'.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User by Id Response"
                }
              }
            }
          },
          "400": {
            "description": "Dados inválidos. (Ex: ID não corresponde ao formato UUID)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Informe id do usuário"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autenticado."
          },
          "403": {
            "description": "Acesso negado. (Ex: Usuário não tem permissão para remover o avatar deste usuário ou não é um administrador)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Acesso negado. Você não tem permissão para remover o avatar deste usuário."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Usuário ou arquivo de avatar não encontrado.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Usuário não encontrado."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/{id}/changePassword": {
      "patch": {
        "description": "Atualiza a senha de um usuário específico. Requer a senha atual para validação.",
        "summary": "Alterar senha do usuário",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do usuário cuja senha será alterada.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "ff9e1bf3-eaf7-4f71-b5a0-d0d806a553a3"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PasswordUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Senha alterada com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Senha alterada com sucesso."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Dados inválidos (por exemplo, nova senha não atende aos requisitos)."
          },
          "401": {
            "description": "Não autenticado ou senha atual incorreta."
          },
          "403": {
            "description": "Acesso negado (usuário não tem permissão para alterar a senha de outro usuário)."
          },
          "404": {
            "description": "Usuário não encontrado."
          }
        }
      }
    },
    "/services": {
      "post": {
        "description": "Cria um novo serviço no sistema. Somente administradores podem realizar o cadastro.",
        "summary": "Criar serviço (admin)",
        "tags": [
          "Services"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Create Service"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Serviço cadastrado com sucesso."
          },
          "400": {
            "description": "Dados inválidos."
          },
          "401": {
            "description": "Não autenticado."
          },
          "403": {
            "description": "Acesso negado."
          },
          "409": {
            "description": "Já existe um serviço com esse título."
          }
        }
      },
      "get": {
        "description": "Lista todos os serviços registrados no sistema com paginação. Todos os usuários autenticados têm acesso.",
        "summary": "Listar serviços",
        "tags": [
          "Services"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Número da página para a listagem.",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "example": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Número de itens por página.",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "example": 10
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filtra serviços por status (ativo/inativo).",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "active",
                "inactive"
              ],
              "example": "active"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de serviços retornada com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/List Services Response"
                }
              }
            }
          },
          "400": {
            "description": "Parâmetros de query inválidos (page, limit ou status)."
          },
          "401": {
            "description": "Não autenticado."
          },
          "403": {
            "description": "Acesso negado."
          }
        }
      }
    },
    "/services/base": {
      "get": {
        "description": "Retorna o valor base atualizado do serviço.",
        "summary": "Buscar Preço Base de Deslocamento",
        "tags": [
          "Services"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Preço base retornado com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "price": {
                      "type": "number",
                      "format": "float",
                      "example": 50.00
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autenticado."
          }
        }
      }
    },
    "/services/{id}": {
      "get": {
        "description": "Retorna os dados de um serviço específico pelo ID. Administradores e técnicos têm acesso.",
        "summary": "Buscar serviço por ID (admin/technical)",
        "tags": [
          "Services"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do serviço a ser buscado.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "a1b2c3d4-e5f6-7890-1234-567890abcdef"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Dados do serviço retornados com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Service by Id Response"
                }
              }
            }
          },
          "400": {
            "description": "ID do serviço inválido. (Ex: ID não corresponde ao formato UUID)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Id inválido."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autenticado."
          },
          "403": {
            "description": "Acesso negado."
          },
          "404": {
            "description": "Serviço não encontrado."
          }
        }
      },
      "patch": {
        "description": "Atualiza os dados de um serviço existente. Somente administradores podem realizar a atualização.",
        "summary": "Atualizar serviço (admin)",
        "tags": [
          "Services"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do serviço a ser atualizado.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "a1b2c3d4-e5f6-7890-1234-567890abcdef"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Update Service"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Serviço atualizado com sucesso."
          },
          "400": {
            "description": "Dados inválidos."
          },
          "401": {
            "description": "Não autenticado."
          },
          "403": {
            "description": "Acesso negado."
          },
          "404": {
            "description": "Serviço não encontrado."
          },
          "409": {
            "description": "Já existe um serviço com esse título."
          }
        }
      },
      "delete": {
        "description": "Remove um serviço do sistema. Somente administradores podem remover.",
        "summary": "Remover serviço (admin)",
        "tags": [
          "Services"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do serviço a ser removido.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "a1b2c3d4-e5f6-7890-1234-567890abcdef"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Serviço excluído com sucesso."
          },
          "400": {
            "description": "ID do serviço inválido."
          },
          "401": {
            "description": "Não autenticado."
          },
          "403": {
            "description": "Acesso negado."
          },
          "404": {
            "description": "Serviço não encontrado."
          }
        }
      }
    },
    "/calleds": {
      "post": {
        "description": "Cria um novo chamado no sistema. Apenas usuários com as roles 'admin' ou 'customer' podem criar um chamado. O sistema atribui automaticamente um técnico disponível com base no horário agendado.",
        "summary": "Criar Chamado",
        "tags": [
          "Calleds"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCalledWithSchedule"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Chamado criado com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Chamado criado com sucesso, [Nome do Técnico] atenderá seu chamado."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Dados inválidos ou não há técnicos disponíveis no horário selecionado.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Todos os técnicos já estão agendados nesse horário. Escolha outro horário ou dia."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autenticado ou dados de validação de esquema inválidos."
          },
          "403": {
            "description": "Acesso negado."
          }
        }
      },
      "get": {
        "description": "Lista todos os chamados com paginação. Apenas administradores podem listar todos os chamados.",
        "summary": "Listar todos os Chamados (Admin)",
        "tags": [
          "Calleds"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Número da página para a listagem.",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "example": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Número de itens por página.",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "example": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de chamados retornada com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/List Calleds Response"
                }
              }
            }
          },
          "400": {
            "description": "Parâmetros de query inválidos ('page' e 'limit' são obrigatórios e devem ser números inteiros válidos)."
          },
          "401": {
            "description": "Não autenticado."
          },
          "403": {
            "description": "Acesso negado."
          }
        }
      }
    },
    "/calleds/user": {
      "get": {
        "description": "Lista os chamados associados ao usuário logado, com paginação. Clientes podem ver seus chamados, e técnicos podem ver os chamados atribuídos a eles.",
        "summary": "Listar Chamados do Usuário Logado",
        "tags": [
          "Calleds"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Número da página para a listagem.",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "example": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Número de itens por página.",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "example": 10
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filtra chamados por status.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "open",
                "in_progress",
                "close"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de chamados do usuário retornada com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/List Calleds Response"
                }
              }
            }
          },
          "400": {
            "description": "Parâmetros de query inválidos ('page' e 'limit' são obrigatórios e devem ser números inteiros válidos)."
          },
          "401": {
            "description": "Não autenticado ou dados de usuário de validação de esquema inválidos."
          },
          "403": {
            "description": "Acesso negado."
          }
        }
      }
    },
    "/calleds/services": {
      "patch": {
        "description": "Adiciona um serviço a um chamado existente. Apenas técnicos podem adicionar serviços aos chamados.",
        "summary": "Adicionar serviço ao Chamado (Technical)",
        "tags": [
          "Calleds"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Add Service to Called"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Serviço adicionado ao chamado com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Serviço adicionado com sucesso."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Dados inválidos (ex: ID do chamado ou serviço inválido).",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Id do chamado inválido."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autenticado."
          },
          "403": {
            "description": "Acesso negado (somente técnicos podem adicionar serviços aos chamados)."
          },
          "404": {
            "description": "Chamado ou serviço não encontrado."
          },
          "409": {
            "description": "Serviço já existe neste chamado."
          }
        }
      }
    },
    "/calleds/comment": {
      "post": {
        "description": "Cria um novo comentário ou tarefa em um chamado. Apenas administradores e técnicos podem criar comentários.",
        "summary": "Criar comentário no chamado (Admin/Technical)",
        "tags": [
          "Calleds"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCalledComment"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Seu acompanhamneto criado com sucesso"
          },
          "401": {
            "description": "Não autenticado ou dados de validação de esquema inválidos."
          },
          "403": {
            "description": "Acesso negado."
          }
        }
      }
    },
    "/calleds/comment/{id}": {
      "patch": {
        "description": "Atualiza um comentário ou tarefa existente em um chamado. Apenas administradores e técnicos podem atualizar.",
        "summary": "Atualizar comentário no chamado (Admin/Technical)",
        "tags": [
          "Calleds"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do comentário a ser atualizado.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCalledComment"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Seu Acompanhamento atualizado com sucesso"
          },
          "400": {
            "description": "Id inválido."
          },
          "401": {
            "description": "Não autenticado ou dados de validação de esquema inválidos."
          },
          "403": {
            "description": "Acesso negado."
          }
        }
      },
      "delete": {
        "description": "Remove um comentário ou tarefa de um chamado. Apenas administradores e técnicos podem remover.",
        "summary": "Remover comentário do chamado (Admin/Technical)",
        "tags": [
          "Calleds"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do comentário a ser removido.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Acompanhamento removido com sucesso"
          },
          "400": {
            "description": "Id inválido."
          },
          "401": {
            "description": "Não autenticado."
          },
          "403": {
            "description": "Acesso negado."
          }
        }
      }
    },
    "/calleds/{id}": {
      "get": {
        "description": "Retorna os detalhes de um chamado específico pelo ID",
        "summary": "Buscar Chamado por ID",
        "tags": [
          "Calleds"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do chamado a ser buscado.",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detalhes do chamado retornados com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Called by Id Response"
                }
              }
            }
          },
          "400": {
            "description": "ID do chamado inválido.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Id inválido."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autenticado."
          },
          "403": {
            "description": "Acesso negado."
          },
          "404": {
            "description": "Chamado não encontrado."
          }
        }
      }
    },
    "/calleds/{idCalled}": {
      "patch": {
        "description": "Atualiza o status de um chamado. Apenas administradores e técnicos podem atualizar o status de um chamado.",
        "summary": "Atualizar Status do Chamado (Admin/Technical)",
        "tags": [
          "Calleds"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "idCalled",
            "in": "path",
            "description": "ID do chamado cujo status será atualizado.",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Update Called Status"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Status do chamado atualizado com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Status do chamado atualizado com sucesso."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Dados inválidos (ex: ID do chamado ou status inválido).",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Status inválido."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autenticado."
          },
          "403": {
            "description": "Acesso negado."
          },
          "404": {
            "description": "Chamado não encontrado."
          }
        }
      }
    },
    "/calleds/{idCalled}/{idServices}": {
      "delete": {
        "description": "Remove um serviço de um chamado existente. Apenas técnicos podem remover serviços dos chamados.",
        "summary": "Remover Serviço do Chamado (Technical)",
        "tags": [
          "Calleds"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "idCalled",
            "in": "path",
            "description": "ID do chamado do qual o serviço será removido.",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "name": "idServices",
            "in": "path",
            "description": "ID do serviço a ser removido do chamado.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "a1b2c3d4-e5f6-7890-1234-567890abcdef"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Serviço removido do chamado com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Serviço removido com sucesso."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Dados inválidos (ex: ID do chamado ou serviço inválido).",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Id do chamado ou serviço inválido."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autenticado."
          },
          "403": {
            "description": "Acesso negado (somente técnicos podem remover serviços dos chamados)."
          },
          "404": {
            "description": "Chamado ou serviço não encontrado no chamado."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Login": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "test@example.com"
          },
          "password": {
            "type": "string",
            "format": "password",
            "example": "password123"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "Response Login": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "token": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "ff9e1bf3-eaf7-4f71-b5a0-d0d806a553a3"
          },
          "name": {
            "type": "string",
            "example": "Nome do Usuário"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "usuario@example.com"
          },
          "role": {
            "type": "string",
            "enum": [
              "customer",
              "technical",
              "admin"
            ],
            "example": "customer"
          },
          "avatar": {
            "type": "string",
            "nullable": true,
            "example": "http://localhost:3333/user/avatar/avatar.png"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "name",
          "email",
          "role",
          "createdAt",
          "updatedAt"
        ]
      },
      "List Users Response": {
        "type": "object",
        "properties": {
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          },
          "currentPage": {
            "type": "integer",
            "example": 1
          },
          "totalPages": {
            "type": "integer",
            "example": 5
          },
          "totalUsers": {
            "type": "integer",
            "example": 45
          }
        }
      },
      "Create User Customer": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Novo Cliente"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "novo.cliente@example.com"
          },
          "password": {
            "type": "string",
            "format": "password",
            "example": "senhaSegura123"
          }
        },
        "required": [
          "name",
          "email",
          "password"
        ]
      },
      "Create User Technical": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Novo Técnico"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "novo.tecnico@example.com"
          },
          "password": {
            "type": "string",
            "format": "password",
            "example": "senhaSegura456"
          }
        },
        "required": [
          "name",
          "email",
          "password"
        ]
      },
      "User by Id Response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/User"
          }
        ]
      },
      "Update User": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Nome Atualizado"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "email.atualizado@example.com"
          },
          "oldPassword": {
            "type": "string",
            "format": "password",
            "example": "senhaAntiga"
          },
          "newPassword": {
            "type": "string",
            "format": "password",
            "example": "novaSenhaSegura"
          },
          "avatar": {
            "type": "string",
            "format": "binary"
          }
        },
        "required": []
      },
      "PasswordUpdate": {
        "type": "object",
        "properties": {
          "currentPassword": {
            "type": "string",
            "example": "senhaAtual123",
            "description": "A senha atual do usuário."
          },
          "newPassword": {
            "type": "string",
            "example": "novaSenhaSegura!",
            "description": "A nova senha para o usuário. Deve ter no mínimo 8 caracteres, incluindo pelo menos uma letra maiúscula, uma letra minúscula, um número e um caractere especial."
          }
        },
        "required": [
          "currentPassword",
          "newPassword"
        ]
      },
      "Create Service": {
        "type": "object",
        "properties": {
          "titleService": {
            "type": "string",
            "example": "Preço base"
          },
          "price": {
            "type": "number",
            "format": "float",
            "example": 200
          }
        },
        "required": [
          "titleService",
          "price"
        ]
      },
      "Service": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "a1b2c3d4-e5f6-7890-1234-567890abcdef"
          },
          "titleService": {
            "type": "string",
            "example": "Formatação de Computador"
          },
          "price": {
            "type": "number",
            "format": "float",
            "example": 150.00
          },
          "status": {
            "type": "string",
            "enum": [
              "active",
              "inactive"
            ],
            "example": "active"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "titleService",
          "price",
          "status",
          "createdAt",
          "updatedAt"
        ]
      },
      "List Services Response": {
        "type": "object",
        "properties": {
          "services": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Service"
            }
          },
          "currentPage": {
            "type": "integer",
            "example": 1
          },
          "totalPages": {
            "type": "integer",
            "example": 3
          },
          "totalServices": {
            "type": "integer",
            "example": 25
          }
        }
      },
      "Service by Id Response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Service"
          }
        ]
      },
      "Update Service": {
        "type": "object",
        "properties": {
          "titleService": {
            "type": "string",
            "example": "Manutenção de Hardware"
          },
          "price": {
            "type": "number",
            "format": "float",
            "example": 200.00
          },
          "status": {
            "type": "string",
            "enum": [
              "active",
              "inactive"
            ],
            "example": "inactive"
          }
        }
      },
      "CreateCalledWithSchedule": {
        "type": "object",
        "properties": {
          "idCustomer": {
            "type": "string",
            "format": "uuid",
            "description": "ID do usuário cliente que está abrindo o chamado. Será preenchido automaticamente com o ID do usuário logado."
          },
          "dateCustomer": {
            "type": "string",
            "example": "2025-12-31",
            "description": "Data para o agendamento do chamado. Não pode ser uma data passada."
          },
          "hourCustomer": {
            "type": "string",
            "example": "14:30",
            "description": "Hora para o agendamento do chamado. Não pode ser uma hora passada."
          },
          "titleCalled": {
            "type": "string",
            "example": "Computador não liga"
          },
          "description": {
            "type": "string",
            "example": "Meu computador não está ligando desde ontem. Já tentei reiniciar várias vezes, mas não funciona."
          },
          "idServices": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "example": "a1b2c3d4-e5f6-7890-1234-567890abcdef"
                }
              },
              "required": [
                "id"
              ]
            },
            "description": "Lista de IDs dos serviços a serem associados ao chamado."
          }
        },
        "required": [
          "idCustomer",
          "dateCustomer",
          "hourCustomer",
          "titleCalled",
          "description",
          "idServices"
        ]
      },
      "Called": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "titleCalled": {
            "type": "string",
            "example": "Computador não liga"
          },
          "description": {
            "type": "string",
            "example": "Meu computador não está ligando desde ontem. Já tentei reiniciar várias vezes, mas não funciona."
          },
          "appointmentTime": {
            "type": "string",
            "format": "date-time",
            "description": "Data e hora agendada para o atendimento."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "services": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "fkServices": {
                  "type": "string",
                  "format": "uuid"
                },
                "titleService": {
                  "type": "string"
                },
                "price": {
                  "type": "number",
                  "format": "float"
                }
              }
            }
          },
          "UserCustomer": {
            "$ref": "#/components/schemas/User"
          },
          "UserTechnical": {
            "$ref": "#/components/schemas/User"
          },
          "callStatus": {
            "type": "string",
            "enum": [
              "open",
              "in_progress",
              "close"
            ],
            "example": "open"
          },
          "calledComments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CalledComment"
            }
          },
          "basePrice": {
            "type": "number",
            "format": "float",
            "description": "Preço base de deslocamento do técnico.",
            "example": 50.00
          },
          "priceTotal": {
            "type": "number",
            "format": "float",
            "description": "Soma total dos preços dos serviços associados ao chamado mais o preço base.",
            "example": 275.50
          }
        }
      },
      "List Calleds Response": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Called"
            }
          },
          "result": {
            "type": "object",
            "properties": {
              "currentPage": {
                "type": "integer",
                "example": 1
              },
              "totalPages": {
                "type": "integer",
                "example": 5
              },
              "totalItems": {
                "type": "integer",
                "example": 45
              }
            }
          }
        }
      },
      "Called by Id Response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Called"
          }
        ]
      },
      "Add Service to Called": {
        "type": "object",
        "properties": {
          "idCalled": {
            "type": "integer",
            "description": "ID do chamado ao qual o serviço será adicionado.",
            "example": 1
          },
          "idServices": {
            "type": "string",
            "format": "uuid",
            "description": "ID do serviço a ser adicionado ao chamado.",
            "example": "a1b2c3d4-e5f6-7890-1234-567890abcdef"
          }
        },
        "required": [
          "idCalled",
          "idServices"
        ]
      },
      "Update Called Status": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "open",
              "in_progress",
              "close"
            ],
            "description": "O novo status do chamado.",
            "example": "in_progress"
          }
        },
        "required": [
          "status"
        ]
      },
      "CreateCalledComment": {
        "type": "object",
        "properties": {
          "idCalled": {
            "type": "integer",
            "description": "ID do chamado ao qual o comentário será adicionado."
          },
          "idUser": {
            "type": "string",
            "format": "uuid",
            "description": "ID do usuário (técnico ou admin) que está criando o comentário."
          },
          "description": {
            "type": "string",
            "description": "Conteúdo do comentário ou da tarefa."
          },
          "type": {
            "type": "string",
            "enum": [
              "followUp",
              "task"
            ],
            "description": "Tipo de comentário, se é um acompanhamento (followUp) ou uma tarefa (task)."
          }
        },
        "required": [
          "idCalled",
          "idUser",
          "description",
          "type"
        ]
      },
      "UpdateCalledComment": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Novo conteúdo do comentário ou da tarefa."
          },
          "type": {
            "type": "string",
            "enum": [
              "followUp",
              "task"
            ],
            "description": "Novo tipo de comentário."
          }
        }
      },
      "UserInComment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "avatar": {
            "type": "string",
            "format": "uri"
          },
          "role": {
            "type": "string",
            "enum": [
              "admin",
              "technical"
            ]
          }
        }
      },
      "CalledComment": {
        "type": "object",
        "properties": {
          "comment": {
            "type": "object",
            "properties": {
              "description": {
                "type": "string"
              },
              "type": {
                "type": "string",
                "enum": [
                  "followUp",
                  "task"
                ]
              }
            }
          },
          "user": {
            "$ref": "#/components/schemas/UserInComment"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Token JWT de autenticação."
      }
    }
  }
}